{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Circle extends Tool {\n  constructor(canvas) {\n    super(canvas);\n    this.listen();\n  }\n\n  listen() {\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      let currentX = e.pageX - e.target.offsetLeft;\n      let currentY = e.pageY - e.target.offsetTop;\n      let width = currentX - this.startX;\n      let height = currentY - this.startY;\n      let r = Math.sqrt(width ** 2 + height ** 2);\n      this.draw(this.startX, this.startY, r);\n    }\n  }\n\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n  }\n\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.startX = e.pageX - e.target.offsetLeft;\n    this.startY = e.pageY - e.target.offsetTop;\n    this.saved = this.canvas.toDataURL();\n  }\n\n  draw(x, y, r) {\n    const img = new Image();\n    img.src = this.saved;\n\n    img.onload = () => {\n      this.ctx.lineWidth = 1;\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/alinagalusko/WebstormProjects/react-paint/src/tools/Circle.js"],"names":["Tool","Circle","constructor","canvas","listen","onmousedown","mouseDownHandler","bind","onmouseup","mouseUpHandler","onmousemove","mouseMoveHandler","e","mouseDown","currentX","pageX","target","offsetLeft","currentY","pageY","offsetTop","width","startX","height","startY","r","Math","sqrt","draw","ctx","beginPath","saved","toDataURL","x","y","img","Image","src","onload","lineWidth","clearRect","drawImage","arc","PI","fill","stroke"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,MAAN,SAAqBD,IAArB,CAA0B;AACrCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN;AACA,SAAKC,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL,SAAKD,MAAL,CAAYE,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA1B;AACA,SAAKJ,MAAL,CAAYK,SAAZ,GAAwB,KAAKC,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAxB;AACA,SAAKJ,MAAL,CAAYO,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAA1B;AACH;;AAEDI,EAAAA,gBAAgB,CAACC,CAAD,EAAI;AAChB,QAAG,KAAKC,SAAR,EAAmB;AACf,UAAIC,QAAQ,GAAGF,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACI,MAAF,CAASC,UAAlC;AACA,UAAIC,QAAQ,GAAGN,CAAC,CAACO,KAAF,GAAUP,CAAC,CAACI,MAAF,CAASI,SAAlC;AACA,UAAIC,KAAK,GAAGP,QAAQ,GAAC,KAAKQ,MAA1B;AACA,UAAIC,MAAM,GAAGL,QAAQ,GAAC,KAAKM,MAA3B;AACA,UAAIC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,IAAE,CAAP,GAAWE,MAAM,IAAE,CAA7B,CAAR;AACA,WAAKK,IAAL,CAAU,KAAKN,MAAf,EAAuB,KAAKE,MAA5B,EAAoCC,CAApC;AACH;AACJ;;AAEDhB,EAAAA,cAAc,CAACG,CAAD,EAAI;AACd,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDP,EAAAA,gBAAgB,CAACM,CAAD,EAAG;AACf,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKgB,GAAL,CAASC,SAAT;AACA,SAAKR,MAAL,GAAcV,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACI,MAAF,CAASC,UAAjC;AACA,SAAKO,MAAL,GAAcZ,CAAC,CAACO,KAAF,GAAUP,CAAC,CAACI,MAAF,CAASI,SAAjC;AACA,SAAKW,KAAL,GAAa,KAAK5B,MAAL,CAAY6B,SAAZ,EAAb;AAEH;;AAEDJ,EAAAA,IAAI,CAACK,CAAD,EAAIC,CAAJ,EAAOT,CAAP,EAAU;AACV,UAAMU,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAU,KAAKN,KAAf;;AACAI,IAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACf,WAAKT,GAAL,CAASU,SAAT,GAAqB,CAArB;AACA,WAAKV,GAAL,CAASW,SAAT,CAAmB,CAAnB,EAAqB,CAArB,EAAwB,KAAKrC,MAAL,CAAYkB,KAApC,EAA2C,KAAKlB,MAAL,CAAYoB,MAAvD;AACA,WAAKM,GAAL,CAASY,SAAT,CAAmBN,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAKhC,MAAL,CAAYkB,KAA1C,EAAiD,KAAKlB,MAAL,CAAYoB,MAA7D;AACA,WAAKM,GAAL,CAASC,SAAT;AACA,WAAKD,GAAL,CAASa,GAAT,CAAaT,CAAb,EAAgBC,CAAhB,EAAmBT,CAAnB,EAAsB,CAAtB,EAAyB,IAAEC,IAAI,CAACiB,EAAhC;AACA,WAAKd,GAAL,CAASe,IAAT;AACA,WAAKf,GAAL,CAASgB,MAAT;AACH,KARD;AAUH;;AAjDoC","sourcesContent":["import Tool from \"./Tool\";\n\nexport default class Circle extends Tool {\n    constructor(canvas) {\n        super(canvas);\n        this.listen();\n    }\n\n    listen() {\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    }\n\n    mouseMoveHandler(e) {\n        if(this.mouseDown) {\n            let currentX = e.pageX - e.target.offsetLeft;\n            let currentY = e.pageY - e.target.offsetTop;\n            let width = currentX-this.startX;\n            let height = currentY-this.startY;\n            let r = Math.sqrt(width**2 + height**2);\n            this.draw(this.startX, this.startY, r);\n        }\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false;\n    }\n\n    mouseDownHandler(e){\n        this.mouseDown = true;\n        this.ctx.beginPath();\n        this.startX = e.pageX - e.target.offsetLeft;\n        this.startY = e.pageY - e.target.offsetTop;\n        this.saved = this.canvas.toDataURL();\n\n    }\n\n    draw(x, y, r) {\n        const img = new Image();\n        img.src = this.saved;\n        img.onload = () => {\n            this.ctx.lineWidth = 1;\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height);\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.beginPath();\n            this.ctx.arc(x, y, r, 0, 2*Math.PI);\n            this.ctx.fill();\n            this.ctx.stroke();\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}