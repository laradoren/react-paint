{"ast":null,"code":"var _jsxFileName = \"/Users/alinagalusko/WebstormProjects/react-paint/src/components/Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = observer(_c = _s(() => {\n  _s();\n\n  const canvasRef = useRef();\n  useEffect(() => {\n    canvasState.setCanvas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        width: \"calc(100wv - 70px)\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}, \"UJgi7ynoup7eqypjnwyX/s32POg=\"));\n_c2 = Canvas;\nexport default Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"sources":["/Users/alinagalusko/WebstormProjects/react-paint/src/components/Canvas.jsx"],"names":["React","useEffect","useRef","observer","canvasState","Canvas","canvasRef","setCanvas","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,MAAM,GAAGF,QAAQ,SAAC,MAAM;AAAA;;AAC1B,QAAMG,SAAS,GAAGJ,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW,CAACG,SAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,oBAAR;AAA8BC,QAAAA,MAAM,EAAE;AAAtC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAbsB,kCAAvB;MAAMJ,M;AAeN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\n\nconst Canvas = observer(() => {\n    const canvasRef = useRef();\n\n    useEffect(() => {\n        canvasState.setCanvas()\n    }, [])\n    return (\n        <div className=\"canvas\">\n            <canvas style={{width: \"calc(100wv - 70px)\", height: \"100%\"}}>\n\n            </canvas>\n        </div>\n    );\n});\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}