{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Line extends Tool {\n  constructor(canvas) {\n    super(canvas);\n    this.listen();\n  }\n\n  listen() {\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n    }\n  }\n\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n  }\n\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.currentX = e.pageX - e.target.offsetLeft;\n    this.currentY = e.pageY - e.target.offsetTop;\n    this.ctx.beginPath();\n    this.saved = this.canvas.toDataURL();\n  }\n\n  draw(x, y, w, h) {\n    const img = new Image();\n    img.src = this.saved;\n\n    img.onload = () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.rect(x, y, w, h);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/alinagalusko/WebstormProjects/react-paint/src/tools/Line.js"],"names":["Tool","Line","constructor","canvas","listen","onmousedown","mouseDownHandler","bind","onmouseup","mouseUpHandler","onmousemove","mouseMoveHandler","e","mouseDown","draw","pageX","target","offsetLeft","pageY","offsetTop","currentX","currentY","ctx","beginPath","saved","toDataURL","x","y","w","h","img","Image","src","onload","clearRect","width","height","drawImage","rect","fill","stroke"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,IAAnB,CAAwB;AACnCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN;AACA,SAAKC,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL,SAAKD,MAAL,CAAYE,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA1B;AACA,SAAKJ,MAAL,CAAYK,SAAZ,GAAwB,KAAKC,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAxB;AACA,SAAKJ,MAAL,CAAYO,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAA1B;AACH;;AAEDI,EAAAA,gBAAgB,CAACC,CAAD,EAAI;AAChB,QAAG,KAAKC,SAAR,EAAmB;AACf,WAAKC,IAAL,CAAUF,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACI,MAAF,CAASC,UAA7B,EAAyCL,CAAC,CAACM,KAAF,GAAUN,CAAC,CAACI,MAAF,CAASG,SAA5D;AACH;AACJ;;AAEDV,EAAAA,cAAc,CAACG,CAAD,EAAI;AACd,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDP,EAAAA,gBAAgB,CAACM,CAAD,EAAG;AACf,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKO,QAAL,GAAgBR,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACI,MAAF,CAASC,UAAnC;AACA,SAAKI,QAAL,GAAgBT,CAAC,CAACM,KAAF,GAAUN,CAAC,CAACI,MAAF,CAASG,SAAnC;AACA,SAAKG,GAAL,CAASC,SAAT;AAEA,SAAKC,KAAL,GAAa,KAAKrB,MAAL,CAAYsB,SAAZ,EAAb;AAEH;;AAEDX,EAAAA,IAAI,CAACY,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACb,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAU,KAAKR,KAAf;;AACAM,IAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACf,WAAKX,GAAL,CAASY,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK/B,MAAL,CAAYgC,KAArC,EAA4C,KAAKhC,MAAL,CAAYiC,MAAxD;AACA,WAAKd,GAAL,CAASe,SAAT,CAAmBP,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAK3B,MAAL,CAAYgC,KAA1C,EAAiD,KAAKhC,MAAL,CAAYiC,MAA7D;AACA,WAAKd,GAAL,CAASC,SAAT;AACA,WAAKD,GAAL,CAASgB,IAAT,CAAcZ,CAAd,EAAiBC,CAAjB,EAAoBC,CAApB,EAAuBC,CAAvB;AACA,WAAKP,GAAL,CAASiB,IAAT;AACA,WAAKjB,GAAL,CAASkB,MAAT;AACH,KAPD;AASH;;AA5CkC","sourcesContent":["import Tool from \"./Tool\";\n\nexport default class Line extends Tool {\n    constructor(canvas) {\n        super(canvas);\n        this.listen();\n    }\n\n    listen() {\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    }\n\n    mouseMoveHandler(e) {\n        if(this.mouseDown) {\n            this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n        }\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false;\n    }\n\n    mouseDownHandler(e){\n        this.mouseDown = true;\n        this.currentX = e.pageX - e.target.offsetLeft;\n        this.currentY = e.pageY - e.target.offsetTop;\n        this.ctx.beginPath();\n\n        this.saved = this.canvas.toDataURL();\n\n    }\n\n    draw(x, y, w, h) {\n        const img = new Image();\n        img.src = this.saved;\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.beginPath();\n            this.ctx.rect(x, y, w, h);\n            this.ctx.fill();\n            this.ctx.stroke();\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}